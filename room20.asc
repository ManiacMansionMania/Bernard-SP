// Kellerraum 2

/****************************
*   Raum-Funktionen
****************************/


function room_Load()
{
  Door[eTuerKeller2].Init(oTuer01, hTuer01);
  oSchranktuer.Clickable = false;
}

function room_AfterFadeIn()
{

}

function room_Leave()
{

}

/****************************
*   Tür-Hotspot-Funktionen
*
***************************/

function hTuer01_AnyClick()
{
  if(Door[eTuerKeller2].Click()==0) Unhandled();
}

/****************************
*   Hotspot-Funktionen
****************************/

function hRegal_AnyClick()
{
  if (any_click_move(180, 108, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein staubiges, altes Regal.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das ist viel zu schwer.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Ich möchte da nichts rein tun.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Das lässt sich nicht öffnen.");
		}
    else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Da ist nichts zum Schließen dran.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Das schaffe ich so nicht.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Das schaffe ich so nicht.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich da nicht rein tun.");
		}
		else Unhandled();
  }
}

function hKiste_AnyClick()
{
  if (any_click_move(400, 103, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			player.Say("Eine große Kiste.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die will ich nicht mitnehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Ich will mich nicht verstecken.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Die ist verschlossen.");
		}
    else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Die ist doch zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Sie bewegt sich nicht.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Sie bewegt sich nicht.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich da nicht rein tun.");
		}
		else Unhandled();
  }
}

function hSchrank_AnyClick()
{
  if (any_click_move(435, 123, eDirectionRight))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
      if(oSchranktuer.Visible)
      {
			Wait(5);
			player.Say("Leer.");
      }
      else
      {
      Wait(5);
			player.Say("Ein Schrank.");
      }
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);	
			player.Say("Der ist an der Wand festgemacht.");
		}
		else if (UsedAction(eActOpen))
		{
      if(oSchranktuer.Visible)
      {
			Wait(5);		
			player.Say("Der Schrank ist bereits offen.");
      }
      else
      {
			aSound85.Play();
      oSchranktuer.Visible = true;
      }
		}
		else if (UsedAction(eActUse))
		{
			if(oSchranktuer.Visible)
      {
			aSound5.Play();
      oSchranktuer.Visible = false;
      }
      else
      {
      aSound85.Play();
      oSchranktuer.Visible = true;
      }
		}
    else if (UsedAction(eActClose))
		{
      if(oSchranktuer.Visible)
      {
			aSound5.Play();
      oSchranktuer.Visible = false;
      }
      else
      {
			Wait(5);		
			player.Say("Der Schrank ist bereits geschlossen.");
      }
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der lässt sich nicht verschieben.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das bringt hier nichts.");
		}
		else Unhandled();
	}
}

function hLichtschalter_AnyClick()
{
  if (any_click_move(55, 105, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Lichtschalter.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);	
			player.Say("Der ist an der Wand festgemacht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);		
			player.Say("Dann stehe ich hier im Dunkeln");
		}
    else if (UsedAction(eActOpen))
		{
			Wait(5);	
			player.Say("Ich möchte keinen Stromschlag bekommen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);		
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das bringt hier nichts.");
		}
		else Unhandled();
	}
}

function hBuecher_AnyClick()
{
  if (any_click_move(245, 108, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Bücher.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);	
			player.Say("Die brauche ich jetzt nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);		
			player.Say("Ich möchte jetzt nicht lesen.");
		}
    else if (UsedAction(eActOpen))
		{
			Wait(5);		
			player.Say("Jetzt nicht.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);		
			player.Say("Geschlossene Lektüre.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Ich lasse sie wo sie sind.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
	}
}

function hKellerfenster_AnyClick()
{
  if (any_click_move(400, 108, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Kellerfenster.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);	
			player.Say("Ich komme nicht dran.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);		
			player.Say("Ich kann da nicht raus klettern.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);		
			player.Say("Ich komme nicht dran.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);		
			player.Say("Ich komme nicht dran.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Es lässt sich nicht verschieben.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das bringt hier nichts.");
		}
		else Unhandled();
	}
}

function hLampe_AnyClick()
{
  if (any_click_move(160, 112, eDirectionRight))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine Lampe.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);	
			player.Say("Ich komme nicht dran.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);		
			player.Say("Dann stehe ich ja im Dunkeln.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);		
			player.Say("Ich komme nicht dran.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);		
			player.Say("Ich komme nicht dran.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Sie lässt sich nicht verschieben.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das bringt hier nichts.");
		}
		else Unhandled();
	}
}

/****************************
*   Objekt-Funktionen
****************************/
