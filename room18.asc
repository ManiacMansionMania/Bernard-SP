// Haustür

/****************************
*   Variablen
****************************/

int mailboxOpen =  465;
int mailboxClosed = 466;
int flagDown = 468;
int flagUp = 467;

/****************************
*   Raum-Funktionen
****************************/

function room_Load()
{
  Door[eTuerEingang].Init(oTuer01, hTuer01);
}

function room_AfterFadeIn()
{

}

function room_Leave()
{

}

/****************************
*   Tür-Hotspot-Funktionen
*
***************************/

function hTuer01_AnyClick()
{
  if(Door[eTuerEingang].Click()==0) Unhandled();
}

/****************************
*   Hotspot-Funktionen
****************************/

function hFenster01_AnyClick()
{
  if (any_click_move(55, 104, eDirectionUp))
	{
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ich kann das Wohnzimmer sehen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich brauche jetzt kein Fenster.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Ich möchte da nicht rein klettern.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Es klemmt.");
		}
    else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Es ist doch zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Es lässt sich nicht bewegen.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Es lässt sich nicht bewegen.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Damit geht das Fenster nicht auf.");
		}
		else Unhandled();
  }
}

function hFenster02_AnyClick()
{
  if (any_click_move(228, 104, eDirectionUp))
	{
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ich kann die Küche sehen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich brauche jetzt kein Fenster.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Ich möchte da nicht rein klettern.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Es klemmt.");
		}
    else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Es ist doch zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Es lässt sich nicht bewegen.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Es lässt sich nicht bewegen.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Damit geht das Fenster nicht auf.");
		}
		else Unhandled();
  }
}

function hFussabtreter_AnyClick()
{
  if (any_click_move(140, 112, eDirectionUp))
	{
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("'Willkommen'");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Außer Staub liegt da nichts drunter.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Meine Schuhe sind doch sauber.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Das geht nicht.");
		}
    else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Es lässt sich nicht bewegen.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Es lässt sich nicht bewegen.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das geht hier nicht.");
		}
		else Unhandled();
  }
}

function hGaragetor_AnyClick()
{
  if (any_click_move(445, 93, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da geht es in unsere Garage.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das kann ich nicht mitnehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Womit?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      aSound1.Play();
      oGaragentor.Visible = true;
    }
    else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Das Tor ist geschlossen.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Das geht nicht.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Das geht nicht.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Damit bekomme ich das Tor nicht auf.");
		}
		else Unhandled();
  }
}

/****************************
*   Objekt-Funktionen
***********************/

function oBriefkasten_AnyClick()
{
  // Switching default action is handled in GlobalScript function VariableExtensions(). 
  if(any_click_move(175, 122, eDirectionRight))
	{
    if (UsedAction(eActWalkTo))
		{
			//Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
      if (oBriefkasten.Graphic == mailboxClosed)
        player.Say("Unser Briefkasten.");
      else if (oBriefkasten.Graphic == mailboxOpen)
        player.Say("Nichts drin.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Es ich doch nichts drin.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Ich habe gerade keine Post zu verschicken.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      if (oBriefkasten.Graphic == mailboxClosed)
      {
        aSound85.Play();
        oBriefkasten.Graphic = mailboxOpen;
      }
      else player.Say("Ist doch schon offen.");
		}
    else if (UsedAction(eActClose))
		{
      Wait(5);
      if (oBriefkasten.Graphic == mailboxOpen)
      {
        aSound5.Play();
        oBriefkasten.Graphic = mailboxClosed;
      }
      else player.Say("Der ist schon zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Er beweget sich nicht.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Er bewegt sich nicht.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Dann sollte ich es auch ausreichend frankieren.");
		}
		else Unhandled();
  }
}

function oGaragentor_AnyClick()
{
  if (any_click_move(445, 93, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
      Wait(5);
			player.ChangeRoom(21, 50, 110);
      player.FaceDirection(eDirectionRight);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da geht es in unsere Garage.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das kann ich nicht mitnehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Womit?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Das Tor ist bereits offen.");
    }
    else if (UsedAction(eActClose))
		{
      Wait(5);
      aSound1.Play();
      oGaragentor.Visible = false;
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Das geht nicht.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Das geht nicht.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Damit bekomme ich das Tor nicht auf.");
		}
		else Unhandled();
  }
}

function oFaehnchen_AnyClick()
{
  if (any_click_move(175, 122, eDirectionRight))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Briefkastenfähnchen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das will ich nicht mitnehmen.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActPull))
		{
			Wait(5);
      if (oFaehnchen.Graphic == flagDown)
      {
        aSound1.Play();
        oFaehnchen.Graphic = flagUp;
      }
      else
      {
        aSound1.Play();
        oFaehnchen.Graphic = flagDown;
      }
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Das kann man nicht öffnen.");
		}
    else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Das kann ich nicht schließen.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Ich kann es nicht drücken.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Unhandled();
  }
}
