// Bibliothek

/****************************
*   Raum-Funktionen
****************************/

function room_Load()
{
  Door[eTuerBibliothek].Init(oTuer01, hTuer01);
  Door[eTuerEsszimmer].Init(oTuer02, hTuer02);
}

function room_AfterFadeIn()
{

}

function room_Leave()
{

}

/****************************
*   Tür-Hotspot-Funktionen
*
***************************/

function hTuer01_AnyClick()
{
  if(Door[eTuerBibliothek].Click()==0) Unhandled();
}

function hTuer02_AnyClick()
{
  if(Door[eTuerEsszimmer].Click()==0) Unhandled();
}

/****************************
*   Hotspot-Funktionen
****************************/

function hBuecher_AnyClick()
{
  if (any_click_move(190, 110, eDirectionUp))
	{
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Bücher.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das sind zu viele.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Ich möchte jetzt nicht lesen.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Ich will sie nicht alle öffnen.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Die sind alle geschlossen.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Die lasse ich so stehen.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Die lasse ich so stehen.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das macht kein Sinn.");
		}
		else Unhandled();
  }
}

/****************************
*   Objekt-Funktionen
****************************/
