// Flur im Erdgeschoss

/****************************
*   Raum-Funktionen
****************************/

function room_Load()
{
  Door[eTuerKueche].Init(oTuer01, hTuer01);
  oWasser.SetView(58);
	oWasser.Animate(0, 0, eRepeat, eNoBlock);
  if ( oWasser.Visible == 1 ) PlayAmbientSound (1, 95, 150, 51, 116);
}

function room_AfterFadeIn()
{

}

function room_Leave()
{

}

/****************************
*   Tür-Hotspot-Funktionen
*
***************************/

function hTuer01_AnyClick()
{
  if(Door[eTuerKueche].Click()==0) Unhandled();
}

/****************************
*   Hotspot-Funktionen
****************************/

function hSchrank01_AnyClick()
{
  if (any_click_move(70, 115, eDirectionUp))
	{
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Hängeschrank.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Den kann ich nicht mitnehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Der ist zu.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      aSound85.Play();
      oSchrank.Visible = true;
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Der ist doch zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      aSound85.Play();
      oSchrank.Visible = true;
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Es passiert nichts.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht anwenden.");
		}
		else Unhandled();
  }
}

function hMikrowelle_AnyClick()
{
  if (any_click_move(190, 115, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine Mikrowelle.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);	
			player.Say("Die bleibt hier stehen.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActOpen))
		{
			Wait(5);
			aSound85.Play();
			oMikrowelle.Visible = true;
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);		
			player.Say("Die Mikrowelle ist bereits geschlossen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Damit es herunter fällt?");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Damit geht sie nicht auf.");
		}
		else Unhandled();
	}
}

function hKuehlschrank_AnyClick()
{
  if (any_click_move(250, 118, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Kühlschrank.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);	
			player.Say("Den packe ich nicht ein.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActOpen))
		{
			Wait(5);
			aSound85.Play();
			oKuehlschrank.Visible = true;
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);		
			player.Say("Der Kühlschrank ist bereits geschlossen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der lässt sich nicht bewegen.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich damit nicht benutzen.");
		}
		else Unhandled();
	}
}

function hHaengeschrank_AnyClick()
{
  if (any_click_move(75, 115, eDirectionUp))
	{
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Hängeschrank.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Den kann ich nicht mitnehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Der ist zu.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      aSound85.Play();
      oHaengeschrank.Visible = true;
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Der ist doch zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      aSound85.Play();
      oHaengeschrank.Visible = true;
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Es passiert nichts.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht anwenden.");
		}
		else Unhandled();
  }
}

function hHerd_AnyClick()
{
  if (any_click_move(150, 115, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Herd.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);	
			player.Say("Der ist hier festgemacht.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActOpen))
		{
			Wait(5);		
			player.Say("Der ist hier nur zur Zierde.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);		
			player.Say("Der Ofen ist bereits geschlossen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Da passiert nichts.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das macht hier kein Sinn.");
		}
		else Unhandled();
	}
}

function hGeschirrspueler_AnyClick()
{
  if (any_click_move(100, 115, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Unser Geschirrspüler.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);	
			player.Say("Der ist hier festgemacht.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActOpen))
		{
			Wait(5);		
			player.Say("Der ist hier nur zur Zierde.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);		
			player.Say("Der Geschirrspüler ist bereits geschlossen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Da passiert nichts.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das macht hier kein Sinn.");
		}
		else Unhandled();
	}
}

function hFenster_AnyClick()
{
  if (any_click_move(60, 120, eDirectionLeft))
	{
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ich kann nach draussen sehen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich brauche jetzt kein Fenster.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Ich möchte da nicht raus klettern.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Es klemmt.");
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Es ist doch zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      player.Say("Es lässt sich nicht bewegen.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Es lässt sich nicht bewegen.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Damit geht das Fenster nicht auf.");
		}
		else Unhandled();
  }
}

function hSchublade_AnyClick()
{
  if (any_click_move(190, 115, eDirectionUp))
	{
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine Schublade.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die möchte ich nicht mitnehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Sie ist zu.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      aSound85.Play();
      oSchublade.Visible = true;
		}
    		else if (UsedAction(eActClose))
		{
			Wait(5);
      player.Say("Sie ist doch zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
      aSound85.Play();
      oSchublade.Visible = true;
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Ich kann sie nicht weiter rein drücken.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Ich sollte die Schublade erst mal öffnen.");
		}
		else Unhandled();
  }
}

function hWaschbecken_AnyClick()
{
  if (any_click_move(50, 125, eDirectionLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
      player.Say("Eine Spüle.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Warum?");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);	
			player.Say("Ich muss mir jetzt nicht die Hände waschen.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);	
			player.Say("Dazu gibt es keinen Grund.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);	
			player.Say("Der Abfluss ist bereits montiert.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);	
			player.Say("Fällt dir nichts besseres ein?");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Damit würde ich die Spüle verstopfen.");
		}
    else Unhandled();
	}
}

function hWasserhahn_AnyClick()
{
  if (any_click_move(50, 125, eDirectionLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Wasserhahn.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der ist festgemacht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			if ( oWasser.Visible )
			{
        oWasser.Visible = false;
				StopAmbientSound(1);
			}
			else
			{
				oWasser.Visible = true;
				PlayAmbientSound (1, 95, 150, 51, 116);
			}
    }
		else if (UsedAction(eActOpen))
		{
      Wait(5);
			if ( oWasser.Visible )
			{
				player.Say("Das Wasser läuft bereits.");
			}
			else
      {
				oWasser.Visible = true;
				PlayAmbientSound (1, 95, 150, 51, 116);
      }
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
      if ( oWasser.Visible )
			{
				oWasser.Visible = false;
				StopAmbientSound(1);
      }
      else
			{
				player.Say("Der Wasserhahn ist doch schon zu.");
			}
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Es bewegt sich nichts.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Es bewegt sich nichts.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich damit nicht benutzen.");
		}
    else Unhandled();
	}
}

/****************************
*   Objekt-Funktionen
***********************/

function oKuehlschrank_AnyClick()
{
  if (any_click_move(250, 118, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);	
			player.Say("Ein Kühlschrank.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);		
			player.Say("Der ist mir zu schwer.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Das habe ich schon getan.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActClose))
		{
			Wait(5);
			aSound5.Play();
			oKuehlschrank.Visible = false;
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);		
			player.Say("Den kann ich nicht bewegen.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das muss nicht gekühlt werden.");
		}
		else Unhandled();
	}
}

function oSchublade_AnyClick()
{
  if (any_click_move(190, 115, eDirectionUp))
	{
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Leer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die möchte ich nicht mitnehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Ich möchte da nichts rein tun.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Sie ist doch schon offen.");
		}
    		else if (UsedAction(eActClose))
		{
      Wait(5);
      aSound5.Play();
      oSchublade.Visible = false;
		}
		else if (UsedAction(eActPull))
		{
      Wait(5);
      player.Say("Ich will sie nicht raus reissen.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      aSound5.Play();
      oSchublade.Visible = false;
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht da rein tun.");
		}
		else Unhandled();
  }
}

function oMikrowelle_AnyClick()
{
  if (any_click_move(190, 115, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);	
			player.Say("Ein Mikrowelle.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);		
			player.Say("Das macht keinen Sinn.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Ist doch schon offen.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActClose))
		{
			Wait(5);
			aSound5.Play();
			oMikrowelle.Visible = false;
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);		
			player.Say("Dann fällt sie runter.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das sollte ich da nicht rein tun.");
		}
		else Unhandled();
	}
}

function oSchrank_AnyClick()
{
  if (any_click_move(70, 115, eDirectionUp))
	{
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Leer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Den kann ich nicht mitnehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Ich möchte da nichts rein tun.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Der ist doch schon offen.");
		}
    		else if (UsedAction(eActClose))
		{
      Wait(5);
      aSound5.Play();
      oSchrank.Visible = false;
		}
		else if (UsedAction(eActPull))
		{
      Wait(5);
      player.Say("Es passiert nichts.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Es passiert nichts.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht anwenden.");
		}
		else Unhandled();
  }
}

function oHaengeschrank_AnyClick()
{
  if (any_click_move(75, 115, eDirectionUp))
	{
    if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Leer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Den kann ich nicht mitnehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
      player.Say("Ich möchte da nichts rein tun.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
      player.Say("Der ist doch schon offen.");
		}
    		else if (UsedAction(eActClose))
		{
      Wait(5);
      aSound5.Play();
      oHaengeschrank.Visible = false;
		}
		else if (UsedAction(eActPull))
		{
      Wait(5);
      player.Say("Es passiert nichts.");
		}
    else if (UsedAction(eActPush))
		{
			Wait(5);
      player.Say("Es passiert nichts.");
		}
    else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht anwenden.");
		}
		else Unhandled();
  }
}
